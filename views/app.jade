extends layout

block content

	.container-fluid#main


	//javascript
	script(type="text/javascript", src="https://cdn.socket.io/socket.io-1.0.6.js")

	script(type="text/javascript").

		var socket = io();

		socket.on('sendMpdAorta',function(msg) {
			console.log('Mpd Aorta received');
			console.log(msg.status);
			console.log(msg.currentsong);

			var status = $.parseJSON(msg.status);
			var currentsong = $.parseJSON(msg.currentsong); 

			renderCurrentSong(status,currentsong);
			renderProgressBar(status);
			updatePlaylist();
		});

		$(document).ready(function(){

			socket.emit('requestMpdAorta');
			
			handlerList = ['pause','previous',
						'next','play','stop',
						'random','repeat'];
			for (i in handlerList) {
				registerMpdHandler(handlerList[i]);
			}
			registerStyles();

		});

		function mpdCommand (name) {
			$.ajax({
				url:'/mpdcommand/' + name
			}).done(function(data) {
				if (data) {
					return data;
				}
			});
		}

		function registerMpdHandler (cmd) {
			$('#' + cmd).on('click',function(){
				mpdCommand(cmd);
			});
		}

		function updatePlaylist() {
			$.ajax({
				url:'/mpdplaylist'
			}).done(function(data) {
				$('#main').append(data);
				registerStyles();
			});
		}

		//styling
		function registerStyles(){
			//controlHover
			$('.control').on('mouseenter',function(){
				$(this).addClass('bigger');
			});
			$('.control').on('mouseleave',function(){
				$(this).removeClass('bigger');
			});
		}
		
		function renderCurrentSong (status,currentsong) {
			if (status.state === 'stop') {
				$('#currentsong').text("");
			}
			else {
				$('#currentsong').text(currentsong.Artist + 
					" - " + currentsong.Title)
			}
		}

		function renderProgressBar(status) {

			var progressBar = $('#progress-bar');

			console.log(status.state);
			if  (status.state === 'play') {
				var songTime = parseFloat(status.time.split(":")[1]);
				var elapsed = parseFloat(status.elapsed);
				startProgressbar(songTime,elapsed);
			}
			else if (status.state === 'pause') {
				stopProgressBar();
			}
			else {
				stopProgressBar();
				progressBar.css('width',0);
			}

			function startProgressbar (songTime,elapsed) {
				
				var initial_width = elapsed / songTime * 100; 
				var duration = songTime - elapsed;
				progressBar
					.stop()
					.css('width',initial_width + '%')
					.animate({'width': '100%'},duration * 1000, 'linear');
			}

			function stopProgressBar () {
				progressBar.stop();
			}
		}

		
		