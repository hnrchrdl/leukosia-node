doctype html
html(lang='en')

  include ./head.jade
  
  body
    header
      if config.appEnv === 'dev'
        h1 turbosloth
        #submenu
          input#username.long(type="text", placeholder="username", value="")
          input#password.long(type="password", placeholder="password", value="")
          .button-wrapper
            i.fa.fa-info
            |  Login
          .button-wrapper
            i.fa.fa-info
            |  New User
        
            
    #background-wrapper.login
      h1 turbosloth
      <br>
      .form-wrapper
        h4 MPD
        input#mpd-host.long(type="text", placeholder="url", value="") 
        input#mpd-port.short(type="text", placeholder="port", value="")
        <br>
        input#mpd-password.extraLong(type="password", placeholder="password", value="")
        <br>
        h4 STREAM
        input#stream-url.extraLong(type="text", placeholder="url", value="")
        
        <br>
        <br>
        .button-wrapper
          #enter.button.text.active S T A R T

    include ./scripts.jade

    // script for custom form posting
    script(type="text/javascript").
      
      $("#enter").on("click", function(){
        var mpd_host = $("#mpd-host").val(),
          mpd_port = $("#mpd-port").val(),
          mpd_password = $("#mpd-password").val(),
          stream_url = $("#stream-url").val(),
          stream_port = $("#stream-port").val();
        console.log(stream_port);
        post("/login", {mpdhost:mpd_host,
          mpdport:mpd_port,
          mpdpassword:mpd_password,
          streamurl:stream_url,
          streamport:stream_port
        });
      });
    

      function post(path, params, method) {
        method = method || "post"; // Set method to post by default if not specified.

        // The rest of this code assumes you are not using a library.
        // It can be made less wordy if you use one.
        var form = document.createElement("form");
        form.setAttribute("method", method);
        form.setAttribute("action", path);

        for(var key in params) {
          if(params.hasOwnProperty(key)) {
            var hiddenField = document.createElement("input");
            hiddenField.setAttribute("type", "hidden");
            hiddenField.setAttribute("value", params[key]);
            hiddenField.setAttribute("name", key);

            form.appendChild(hiddenField);
          }
        }

        document.body.appendChild(form);
        form.submit();
      }

